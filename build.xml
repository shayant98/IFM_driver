<?xml version="1.0" encoding="UTF-8"?>
<!--
    Configuration properties:

    test-report: with true generates code coverage and JUnit XML report,
        default false.
    php-versions: a list of comma separated versions availables with phpenv, if
        defined the tests will be executed for each version. If no PHP version
        is provided the actual system version will be used.

    Examples:

    ant -Dphp-versions=5.4.45,5.5.30
    ant -Dtest-report=true
    ant -Dphp-versions=5.6.16 -Dtest-report=true
-->
<project name="ifx4dd" default="test-all" xmlns:if="ant:if" xmlns:unless="ant:unless">

    <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>

    <property name="phpunit-config" value="${basedir}/build/phpunit.xml" />
    <property name="phpunit-config-template" value="${basedir}/build/phpunit-template.xml" />

    <target name="test-all" depends="informix-1170, informix-1210" description="Test all Informix versions" />

    <target name="informix-1170" description="Test Informix 11.70">
        <antcall target="runtests">
            <param name="ifx-port" value="9087" />
            <param name="ifx-server" value="ifx1170" />
        </antcall>
    </target>

    <target name="informix-1210" description="Test Informix 12.10">
        <antcall target="runtests">
            <param name="ifx-port" value="9088" />
            <param name="ifx-server" value="ifx1210" />
        </antcall>
    </target>

    <target name="test-with-report-generation" description="Test with report generation">
        <antcall target="runtests">
            <param name="ifx-port" value="9088" />
            <param name="ifx-server" value="ifx1210" />
            <param name="test-report" value="true" />
        </antcall>
    </target>

    <target name="lint" description="PHP syntax check">
        <apply executable="php" failonerror="true" taskname="lint">
            <arg value="-l" />

            <fileset dir="${basedir}/lib">
                <include name="**/*.php" />
                <modified />
            </fileset>

            <fileset dir="${basedir}/tests">
                <include name="**/*.php" />
                <modified />
            </fileset>
        </apply>
    </target>

    <target name="run-composer" description="Dependency resolution with composer">
        <exec executable="composer" failonerror="true" taskname="run-composer">
            <arg value="update" />
            <arg value="--prefer-source" />
            <arg value="--optimize-autoloader" />
            <arg value="--no-progress" />
            <arg value="--no-interaction" />
        </exec>
    </target>

    <target name="show-dbal-version">
        <exec executable="composer" failonerror="true" taskname="show-dbal-version">
            <arg value="show" />
            <arg value="doctrine/dbal" />
        </exec>
    </target>

    <target name="runtests">

        <condition property="php-versions" value="none">
            <not>
                <isset property="php-versions" />
            </not>
        </condition>

        <antcall target="create-phpunit-config" />

        <foreach target="phpunit" param="php-version" list="${php-versions}" />

    </target>

    <target name="phpunit">

        <condition property="test-report" value="false">
            <not>
                <isset property="test-report" />
            </not>
        </condition>

        <antcall target="set-php-version" />
        <antcall target="lint" />
        <antcall target="run-composer" />
        <antcall target="show-dbal-version" />

        <exec executable="${basedir}/vendor/bin/phpunit" failonerror="true" taskname="phpunit">
            <arg value="--configuration"/>
            <arg path="${phpunit-config}"/>
            <!-- test report only if it is set -->
            <arg value="--log-junit" if:true="${test-report}"/>
            <arg path="${basedir}/build/logs/junit.xml" if:true="${test-report}"/>
            <!-- coverage only if it is set -->
            <arg value="--no-coverage" unless:true="${test-report}"/>
        </exec>

    </target>

    <target name="create-phpunit-config">

        <copy file="${phpunit-config-template}" tofile="${phpunit-config}" overwrite="true">
            <filterset>
                <filter token="ifx-port" value="${ifx-port}"/>
                <filter token="ifx-server" value="${ifx-server}"/>
            </filterset>
        </copy>

    </target>

    <target name="set-php-version">

        <if>
            <not>
                <equals arg1="${php-version}" arg2="none" />
            </not>
            <then>
                <exec executable="phpenv" failonerror="true">
                    <arg value="local" />
                    <arg value="${php-version}" />
                </exec>
            </then>
        </if>

        <exec executable="php" failonerror="true">
            <arg value="-v" />
        </exec>

    </target>

</project>
